services:
  db:
    image: postgres:14-alpine
    container_name: eldorado-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: eldorado_db
    volumes:
      - pgdata:/var/lib/postgresql/data           # datos persistentes
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro

    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d eldorado_db"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  api:
    container_name: eldorado-api-dev
    build:
      # el docker‑compose está dentro de .devcontainer; '..' apunta a la raíz del proyecto
      context: ..
      dockerfile: .devcontainer/Dockerfile
    user: node
    working_dir: /app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ../.env
    ports:
      - "3000:3000"
    volumes:
      - ..:/app:cached               # código fuente
      - node_modules:/app/node_modules
    command: sh -c "sudo chown -R node:node /app && sleep infinity"   

volumes:
  pgdata:
  node_modules:
